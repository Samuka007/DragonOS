name: Build Check

on:
  push:
    branches: ["master", "feat-*", "fix-*"]
  pull_request:
    branches: ["master", "feat-*", "fix-*"]

jobs:
  # format-check:
  #   name: Format check ${{ matrix.arch }}
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   container: ghcr.io/samuka007/dragonos-oscomp-ci-docker:sha256-100a567bd92f94ebe2b12cd7568dbdf164d669a32c45bcbc22acf9c1a22fd9e1

  #   strategy:
  #     matrix:
  #       arch: [x86_64, riscv64]

  #   steps:
  #     - run: echo "Running in OSCOMP docker image"
  #     - uses: actions/checkout@v3

  #     - name: Format check
  #       env:
  #         ARCH: ${{ matrix.arch }}
  #         HOME: /root
  #       shell: bash -ileo pipefail {0}
  #       run: |
  #         printf "\n" >> kernel/src/include/bindings/bindings.rs
  #         sed -i 's/arch = ".*"/arch = "${{ matrix.arch }}"/' dadk-manifest.toml
  #         FMT_CHECK=1 make fmt

  # kernel-static-test:
  #   name: Kernel static test ${{ matrix.arch }}
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   container: ghcr.io/samuka007/dragonos-oscomp-ci-docker:sha256-100a567bd92f94ebe2b12cd7568dbdf164d669a32c45bcbc22acf9c1a22fd9e1

  #   strategy:
  #     matrix:
  #       arch: [x86_64, riscv64]

  #   steps:
  #     - run: echo "Running in OSCOMP docker image"

  #     - uses: actions/checkout@v3

  #     - name: Run kernel static test
  #       shell: bash -ileo pipefail {0}
  #       env:
  #         ARCH: ${{ matrix.arch }}
  #         HOME: /root
  #       run: bash -c "source /root/.cargo/env && cd kernel && make test && make test-rbpf"

  # build-x86_64:
  #   runs-on: ubuntu-latest
  #   container: ghcr.io/samuka007/dragonos-oscomp-ci-docker:sha256-100a567bd92f94ebe2b12cd7568dbdf164d669a32c45bcbc22acf9c1a22fd9e1

  #   steps:
  #     - run: echo "Running in OSCOMP docker image"

  #     - uses: actions/checkout@v3
  #     - name: build the DragonOS
  #       env:
  #         ARCH: x86_64
  #         HOME: /root
  #       shell: bash -ileo pipefail {0}

  #       run: |
  #         source ~/.bashrc && source ~/.cargo/env
  #         make ci-user -j $(nproc) ARCH=x86_64
  #         make ci-kernel -j $(nproc) ARCH=x86_64
  
  test-riscv64:
    runs-on: ubuntu-latest
    container: 
      image: ghcr.io/samuka007/dragonos-oscomp-ci-docker:main
      options: --privileged
    steps:
      - run: echo "Running in OSCOMP docker image"

      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: build the DragonOS
        shell: bash -ileo pipefail {0}
        env:
          ARCH: riscv64
          HOME: /root

        run: |
          source ~/.bashrc && source ~/.cargo/env
          make ci-run ARCH=riscv64
